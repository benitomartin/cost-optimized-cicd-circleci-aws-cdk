version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.0
  node: circleci/node@7.1.0

jobs:
  deploy:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      
      - run:
          name: Install node.js and CDK
          command: |
            npm install -g aws-cdk

      - run:
          name: Set up Python environment
          command: |
            cd cdk
            python -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Verify AWS credentials
          command: aws sts get-caller-identity

      - run:
          name: Bootstrap CDK
          command: |
            cd cdk
            source .venv/bin/activate
            cdk bootstrap

      - run:
          name: Deploy CDK stacks
          command: |
            cd cdk
            source .venv/bin/activate
            cdk deploy --all --require-approval never

      - run:
          name: Output deployment info
          command: |
            echo "Deployment completed successfully"
            echo "Check AWS Console for deployed resources"

  destroy:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout

      - run:
          name: Install node.js and CDK
          command: |
            npm install -g aws-cdk

      - run:
          name: Set up Python environment
          command: |
            cd cdk
            python -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Verify AWS credentials
          command: aws sts get-caller-identity

      - run:
          name: Destroy CDK stacks
          command: |
            cd cdk
            source .venv/bin/activate
            cdk destroy --all --force

      - run:
          name: Output teardown info
          command: |
            echo "Teardown completed successfully"
            echo "Resources have been destroyed"

workflows:
  deploy_app:
    jobs:
      - deploy

  # Manual trigger via API or CircleCI UI
  manual_destroy:
    when: on_request
    jobs:
      - destroy

  # Optional: scheduled destroy job (e.g., Every Friday at 13:00 UTC)
  scheduled_teardown:
    triggers:
      - schedule:
          cron: "0 13 * * 5"  # Every Friday at 13:00 UTC
          filters:
            branches:
              only:
                - main
    jobs:
      - destroy
